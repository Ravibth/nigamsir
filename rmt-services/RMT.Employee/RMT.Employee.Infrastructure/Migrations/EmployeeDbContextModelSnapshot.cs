// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RMT.Employee.Infrastructure.Data;

#nullable disable

namespace RMT.Employee.Infrastructure.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    partial class EmployeeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RMT.Employee.Domain.Entities.EmployeeLanguage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("employee_mid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("employee_profile_id")
                        .HasColumnType("bigint");

                    b.Property<string>("language_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("read")
                        .HasColumnType("text");

                    b.Property<string>("speak")
                        .HasColumnType("text");

                    b.Property<string>("write")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("employee_profile_id");

                    b.ToTable("EmployeeLanguage");
                });

            modelBuilder.Entity("RMT.Employee.Domain.Entities.EmployeePreference", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmployeeEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PreferenceInfo")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<int>("PreferenceOrder")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("EmployeePreferences");
                });

            modelBuilder.Entity("RMT.Employee.Domain.Entities.EmployeeProfile", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<string>("about_me")
                        .HasColumnType("text");

                    b.Property<string>("business_unit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("co_supercoach_email")
                        .HasColumnType("text");

                    b.Property<string>("co_supercoach_mid")
                        .HasColumnType("text");

                    b.Property<string>("co_supercoach_name")
                        .HasColumnType("text");

                    b.Property<string>("competency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("designation")
                        .HasColumnType("text");

                    b.Property<string>("employee_code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("employee_email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("employee_mid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("employee_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("employee_type")
                        .HasColumnType("text");

                    b.Property<string>("linkedin_url")
                        .HasColumnType("text");

                    b.Property<string>("location")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("present_work_location")
                        .HasColumnType("text");

                    b.Property<string>("supercoach_email")
                        .HasColumnType("text");

                    b.Property<string>("supercoach_mid")
                        .HasColumnType("text");

                    b.Property<string>("supercoach_name")
                        .HasColumnType("text");

                    b.Property<double?>("year_of_experience")
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.ToTable("EmployeeProfile");
                });

            modelBuilder.Entity("RMT.Employee.Domain.Entities.EmployeeProjectMapping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmpMID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Offering")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OfferingId")
                        .HasColumnType("text");

                    b.Property<string>("Solution")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SolutionId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EmployeeProjectMapping");
                });

            modelBuilder.Entity("RMT.Employee.Domain.Entities.EmployeeQualification", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<string>("area_of_specialisation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("employee_mid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("employee_profile_id")
                        .HasColumnType("bigint");

                    b.Property<string>("institute_location_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("is_published")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("month_year_of_passing")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("qualification")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("qualification_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("employee_profile_id");

                    b.ToTable("EmployeeQualification");
                });

            modelBuilder.Entity("RMT.Employee.Domain.Entities.EmployeeWorkExprerience", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("employee_mid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("employee_profile_id")
                        .HasColumnType("bigint");

                    b.Property<string>("from")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("last_designation_held")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name_of_employer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("to")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("employee_profile_id");

                    b.ToTable("EmployeeWorkExperience");
                });

            modelBuilder.Entity("RMT.Employee.Domain.Entities.ExperienceOutsideGT", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<string>("client_name")
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<long>("employee_profile_id")
                        .HasColumnType("bigint");

                    b.Property<string>("industry")
                        .HasColumnType("text");

                    b.Property<string>("job_end_date")
                        .HasColumnType("text");

                    b.Property<string>("job_start_date")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("project_description")
                        .HasColumnType("text");

                    b.Property<string>("project_location")
                        .HasColumnType("text");

                    b.Property<string>("project_name")
                        .HasColumnType("text");

                    b.Property<string>("sub_industry")
                        .HasColumnType("text");

                    b.Property<string>("tasks_performed")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("employee_profile_id");

                    b.ToTable("EmployeeExperienceOutsideGT");
                });

            modelBuilder.Entity("RMT.Employee.Domain.Entities.PreferenceMaster", b =>
                {
                    b.Property<long>("PreferenceMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PreferenceMasterId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.HasKey("PreferenceMasterId");

                    b.ToTable("PreferenceMasters");

                    b.HasData(
                        new
                        {
                            PreferenceMasterId = 100L,
                            Category = "LOCATION",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Noida",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 101L,
                            Category = "LOCATION",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Delhi",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 102L,
                            Category = "LOCATION",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Pune",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 103L,
                            Category = "LOCATION",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Lucknow",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 104L,
                            Category = "LOCATION",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Hydrabad",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 105L,
                            Category = "LOCATION",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Jaipur",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 106L,
                            Category = "SME",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "SME 1",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 107L,
                            Category = "SME",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "SME 2",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 108L,
                            Category = "SME",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "SME 3",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 109L,
                            Category = "SME",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "SME 4",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 110L,
                            Category = "SME",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "SME 5",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 111L,
                            Category = "REVENUE_UNIT",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "REVENUE UNIT 1",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 112L,
                            Category = "REVENUE_UNIT",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "REVENUE UNIT 2",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 113L,
                            Category = "REVENUE_UNIT",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "REVENUE UNIT 3",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 114L,
                            Category = "REVENUE_UNIT",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "REVENUE UNIT 4",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 115L,
                            Category = "REVENUE_UNIT",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "REVENUE UNIT 5",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 116L,
                            Category = "EXPERTISE",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "EXPERTISE 1",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 117L,
                            Category = "EXPERTISE",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "EXPERTISE 2",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 118L,
                            Category = "EXPERTISE",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "EXPERTISE 3",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 119L,
                            Category = "EXPERTISE",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "EXPERTISE 4",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 120L,
                            Category = "EXPERTISE",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "EXPERTISE 5",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 121L,
                            Category = "ENGAGEMENT_LEADER",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Samarth Mathur",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 122L,
                            Category = "ENGAGEMENT_LEADER",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Manish Karl",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 123L,
                            Category = "ENGAGEMENT_LEADER",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Devang Sharma",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 124L,
                            Category = "ENGAGEMENT_LEADER",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Abhishake Kumar",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 125L,
                            Category = "ENGAGEMENT_LEADER",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Shristi",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 126L,
                            Category = "BUISNESS_UNIT",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Business Unit 1",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 127L,
                            Category = "BUISNESS_UNIT",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Business Unit 2",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 128L,
                            Category = "BUISNESS_UNIT",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Business Unit 3",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 129L,
                            Category = "BUISNESS_UNIT",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Business Unit 4",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 130L,
                            Category = "BUISNESS_UNIT",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Business Unit 5",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 131L,
                            Category = "INDUSTRY",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Industry 1",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 132L,
                            Category = "INDUSTRY",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Industry 2",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 133L,
                            Category = "INDUSTRY",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Industry 3",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 134L,
                            Category = "INDUSTRY",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Industry 4",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 135L,
                            Category = "INDUSTRY",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Industry 5",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 136L,
                            Category = "SECTOR",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Sector 1",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 137L,
                            Category = "SECTOR",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Sector 2",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 138L,
                            Category = "SECTOR",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Sector 3",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 139L,
                            Category = "SECTOR",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Sector 4",
                            SortOrder = 10
                        },
                        new
                        {
                            PreferenceMasterId = 140L,
                            Category = "SECTOR",
                            CreatedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            CreatedBy = "System",
                            Description = "String",
                            IsActive = true,
                            ModifiedAt = new DateTime(2024, 1, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = "System",
                            Name = "Sector 5",
                            SortOrder = 10
                        });
                });

            modelBuilder.Entity("RMT.Employee.Domain.Entities.EmployeeLanguage", b =>
                {
                    b.HasOne("RMT.Employee.Domain.Entities.EmployeeProfile", "employee_profile")
                        .WithMany("employee_language")
                        .HasForeignKey("employee_profile_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee_profile");
                });

            modelBuilder.Entity("RMT.Employee.Domain.Entities.EmployeeQualification", b =>
                {
                    b.HasOne("RMT.Employee.Domain.Entities.EmployeeProfile", "employee_profile")
                        .WithMany("employee_qualification")
                        .HasForeignKey("employee_profile_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee_profile");
                });

            modelBuilder.Entity("RMT.Employee.Domain.Entities.EmployeeWorkExprerience", b =>
                {
                    b.HasOne("RMT.Employee.Domain.Entities.EmployeeProfile", "employee_profile")
                        .WithMany("employee_work_experience")
                        .HasForeignKey("employee_profile_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee_profile");
                });

            modelBuilder.Entity("RMT.Employee.Domain.Entities.ExperienceOutsideGT", b =>
                {
                    b.HasOne("RMT.Employee.Domain.Entities.EmployeeProfile", "employee_profile")
                        .WithMany("experience_outside_gt")
                        .HasForeignKey("employee_profile_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee_profile");
                });

            modelBuilder.Entity("RMT.Employee.Domain.Entities.EmployeeProfile", b =>
                {
                    b.Navigation("employee_language");

                    b.Navigation("employee_qualification");

                    b.Navigation("employee_work_experience");

                    b.Navigation("experience_outside_gt");
                });
#pragma warning restore 612, 618
        }
    }
}
