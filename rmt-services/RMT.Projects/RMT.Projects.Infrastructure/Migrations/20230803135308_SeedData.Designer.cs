// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RMT.Projects.Infrastructure.Data;

#nullable disable

namespace RMT.Projects.Infrastructure.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20230803135308_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RMT.Projects.Domain.Entities.MasterValue", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long?>("Id"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("RecordDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("RecordInternalName")
                        .HasColumnType("text");

                    b.Property<string>("RecordType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MasterValues");

                    b.HasData(
                        new
                        {
                            Id = 101L,
                            IsActive = true,
                            RecordDisplayName = "User1",
                            RecordInternalName = "User1@email.com",
                            RecordType = "Delegate"
                        },
                        new
                        {
                            Id = 102L,
                            IsActive = true,
                            RecordDisplayName = "User2",
                            RecordInternalName = "User2@email.com",
                            RecordType = "Delegate"
                        },
                        new
                        {
                            Id = 103L,
                            IsActive = true,
                            RecordDisplayName = "User3",
                            RecordInternalName = "User3@email.com",
                            RecordType = "Delegate"
                        },
                        new
                        {
                            Id = 104L,
                            IsActive = true,
                            RecordDisplayName = "Consultant",
                            RecordInternalName = "Consultant",
                            RecordType = "Designation"
                        },
                        new
                        {
                            Id = 105L,
                            IsActive = true,
                            RecordDisplayName = "Sr Consultant",
                            RecordInternalName = "SrConsultant",
                            RecordType = "Designation"
                        },
                        new
                        {
                            Id = 106L,
                            IsActive = true,
                            RecordDisplayName = "Manager",
                            RecordInternalName = "Manager",
                            RecordType = "Designation"
                        },
                        new
                        {
                            Id = 107L,
                            IsActive = true,
                            RecordDisplayName = "EL1",
                            RecordInternalName = "EL1@email.com",
                            RecordType = "EngagementLeader"
                        },
                        new
                        {
                            Id = 108L,
                            IsActive = true,
                            RecordDisplayName = "EL2",
                            RecordInternalName = "EL2@email.com",
                            RecordType = "EngagementLeader"
                        },
                        new
                        {
                            Id = 109L,
                            IsActive = true,
                            RecordDisplayName = "EL3",
                            RecordInternalName = "EL3@email.com",
                            RecordType = "EngagementLeader"
                        },
                        new
                        {
                            Id = 110L,
                            IsActive = true,
                            RecordDisplayName = "Expertise1",
                            RecordInternalName = "Expertise1",
                            RecordType = "Expertise"
                        },
                        new
                        {
                            Id = 111L,
                            IsActive = true,
                            RecordDisplayName = "Expertise2",
                            RecordInternalName = "Expertise2",
                            RecordType = "Expertise"
                        },
                        new
                        {
                            Id = 112L,
                            IsActive = true,
                            RecordDisplayName = "Expertise3",
                            RecordInternalName = "Expertise3",
                            RecordType = "Expertise"
                        },
                        new
                        {
                            Id = 113L,
                            IsActive = true,
                            RecordDisplayName = "Auditing",
                            RecordInternalName = "Auditing",
                            RecordType = "Skill"
                        },
                        new
                        {
                            Id = 114L,
                            IsActive = true,
                            RecordDisplayName = "Taxation",
                            RecordInternalName = "Taxation",
                            RecordType = "Skill"
                        },
                        new
                        {
                            Id = 115L,
                            IsActive = true,
                            RecordDisplayName = "Consulting",
                            RecordInternalName = "Consulting",
                            RecordType = "Skill"
                        },
                        new
                        {
                            Id = 116L,
                            IsActive = true,
                            RecordDisplayName = "SME1",
                            RecordInternalName = "SME1",
                            RecordType = "SME"
                        },
                        new
                        {
                            Id = 117L,
                            IsActive = true,
                            RecordDisplayName = "SME2",
                            RecordInternalName = "SME2",
                            RecordType = "SME"
                        },
                        new
                        {
                            Id = 118L,
                            IsActive = true,
                            RecordDisplayName = "SME3",
                            RecordInternalName = "SME3",
                            RecordType = "SME"
                        });
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BudgetStatus")
                        .HasColumnType("text");

                    b.Property<string>("ChargableType")
                        .HasColumnType("text");

                    b.Property<string>("ClientName")
                        .HasColumnType("text");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Expertise")
                        .HasColumnType("text");

                    b.Property<string>("Industry")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<bool?>("MarketClosed")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("ModifiedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("PipelineCode")
                        .HasColumnType("text");

                    b.Property<string>("PipelineName")
                        .HasColumnType("text");

                    b.Property<string>("PipelineStage")
                        .HasColumnType("text");

                    b.Property<string>("ProjectAllocationStatus")
                        .HasColumnType("text");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("text");

                    b.Property<int?>("ProjectFulFilledDemands")
                        .HasColumnType("integer");

                    b.Property<string>("ProjectName")
                        .HasColumnType("text");

                    b.Property<string>("ProjectType")
                        .HasColumnType("text");

                    b.Property<string>("RevenueUnit")
                        .HasColumnType("text");

                    b.Property<string>("Sme")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 101L,
                            BudgetStatus = "PC101",
                            ChargableType = "PC101",
                            ClientName = "PC101",
                            CreatedBy = "System data",
                            Description = "PC101",
                            EndDate = new DateTime(2023, 8, 18, 13, 53, 8, 476, DateTimeKind.Utc).AddTicks(2972),
                            Expertise = "PC101",
                            Industry = "PC101",
                            IsActive = true,
                            Location = "PC101",
                            MarketClosed = true,
                            ModifiedBy = "System Data",
                            PipelineCode = "PC101",
                            PipelineName = "PC101",
                            PipelineStage = "PC101",
                            ProjectAllocationStatus = "PC101",
                            ProjectCode = "PC101",
                            ProjectFulFilledDemands = 0,
                            ProjectName = "PC101",
                            ProjectType = "PC101",
                            RevenueUnit = "PC101",
                            Sme = "PC101",
                            StartDate = new DateTime(2023, 8, 8, 13, 53, 8, 476, DateTimeKind.Utc).AddTicks(2960)
                        },
                        new
                        {
                            Id = 102L,
                            BudgetStatus = "PC102",
                            ChargableType = "PC102",
                            ClientName = "PC102",
                            CreatedBy = "System data",
                            Description = "PC102",
                            EndDate = new DateTime(2023, 8, 18, 13, 53, 8, 476, DateTimeKind.Utc).AddTicks(2977),
                            Expertise = "PC102",
                            Industry = "PC102",
                            IsActive = true,
                            Location = "PC102",
                            MarketClosed = true,
                            ModifiedBy = "System Data",
                            PipelineCode = "PC102",
                            PipelineName = "PC102",
                            PipelineStage = "PC102",
                            ProjectAllocationStatus = "PC102",
                            ProjectCode = "PC102",
                            ProjectFulFilledDemands = 0,
                            ProjectName = "PC102",
                            ProjectType = "PC102",
                            RevenueUnit = "PC102",
                            Sme = "PC102",
                            StartDate = new DateTime(2023, 8, 8, 13, 53, 8, 476, DateTimeKind.Utc).AddTicks(2977)
                        },
                        new
                        {
                            Id = 103L,
                            BudgetStatus = "PC103",
                            ChargableType = "PC103",
                            ClientName = "PC103",
                            CreatedBy = "System data",
                            Description = "PC103",
                            EndDate = new DateTime(2023, 8, 18, 13, 53, 8, 476, DateTimeKind.Utc).AddTicks(2981),
                            Expertise = "PC103",
                            Industry = "PC103",
                            IsActive = true,
                            Location = "PC103",
                            MarketClosed = true,
                            ModifiedBy = "System Data",
                            PipelineCode = "PC103",
                            PipelineName = "PC103",
                            PipelineStage = "PC103",
                            ProjectAllocationStatus = "PC103",
                            ProjectCode = "PC103",
                            ProjectFulFilledDemands = 0,
                            ProjectName = "PC103",
                            ProjectType = "PC103",
                            RevenueUnit = "PC103",
                            Sme = "PC103",
                            StartDate = new DateTime(2023, 8, 8, 13, 53, 8, 476, DateTimeKind.Utc).AddTicks(2980)
                        },
                        new
                        {
                            Id = 104L,
                            BudgetStatus = "PC104",
                            ChargableType = "PC104",
                            ClientName = "PC104",
                            CreatedBy = "System data",
                            Description = "PC104",
                            EndDate = new DateTime(2023, 8, 18, 13, 53, 8, 476, DateTimeKind.Utc).AddTicks(2984),
                            Expertise = "PC104",
                            Industry = "PC104",
                            IsActive = true,
                            Location = "PC104",
                            MarketClosed = true,
                            ModifiedBy = "System Data",
                            PipelineCode = "PC104",
                            PipelineName = "PC104",
                            PipelineStage = "PC104",
                            ProjectAllocationStatus = "PC104",
                            ProjectCode = "PC104",
                            ProjectFulFilledDemands = 0,
                            ProjectName = "PC104",
                            ProjectType = "PC104",
                            RevenueUnit = "PC104",
                            Sme = "PC104",
                            StartDate = new DateTime(2023, 8, 8, 13, 53, 8, 476, DateTimeKind.Utc).AddTicks(2983)
                        });
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectDemand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("ModifiedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<int>("NoOfResources")
                        .HasColumnType("integer");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectDemands");

                    b.HasData(
                        new
                        {
                            Id = 111L,
                            Designation = "Consultant",
                            IsActive = true,
                            NoOfResources = 2,
                            ProjectId = 101L
                        },
                        new
                        {
                            Id = 112L,
                            Designation = "Sr Consultant",
                            IsActive = true,
                            NoOfResources = 3,
                            ProjectId = 101L
                        },
                        new
                        {
                            Id = 113L,
                            Designation = "Project Consultant",
                            IsActive = true,
                            NoOfResources = 1,
                            ProjectId = 101L
                        },
                        new
                        {
                            Id = 114L,
                            Designation = "Manager ",
                            IsActive = true,
                            NoOfResources = 1,
                            ProjectId = 101L
                        },
                        new
                        {
                            Id = 115L,
                            Designation = "Consultant",
                            IsActive = true,
                            NoOfResources = 2,
                            ProjectId = 102L
                        },
                        new
                        {
                            Id = 116L,
                            Designation = "Sr Consultant",
                            IsActive = true,
                            NoOfResources = 3,
                            ProjectId = 102L
                        },
                        new
                        {
                            Id = 117L,
                            Designation = "Project Consultant",
                            IsActive = true,
                            NoOfResources = 1,
                            ProjectId = 102L
                        },
                        new
                        {
                            Id = 118L,
                            Designation = "Manager ",
                            IsActive = true,
                            NoOfResources = 1,
                            ProjectId = 102L
                        },
                        new
                        {
                            Id = 119L,
                            Designation = "Consultant",
                            IsActive = true,
                            NoOfResources = 2,
                            ProjectId = 103L
                        },
                        new
                        {
                            Id = 120L,
                            Designation = "Sr Consultant",
                            IsActive = true,
                            NoOfResources = 3,
                            ProjectId = 103L
                        },
                        new
                        {
                            Id = 121L,
                            Designation = "Project Consultant",
                            IsActive = true,
                            NoOfResources = 1,
                            ProjectId = 103L
                        },
                        new
                        {
                            Id = 122L,
                            Designation = "Manager ",
                            IsActive = true,
                            NoOfResources = 1,
                            ProjectId = 103L
                        },
                        new
                        {
                            Id = 123L,
                            Designation = "Consultant",
                            IsActive = true,
                            NoOfResources = 2,
                            ProjectId = 104L
                        },
                        new
                        {
                            Id = 124L,
                            Designation = "Sr Consultant",
                            IsActive = true,
                            NoOfResources = 3,
                            ProjectId = 104L
                        },
                        new
                        {
                            Id = 125L,
                            Designation = "Project Consultant",
                            IsActive = true,
                            NoOfResources = 1,
                            ProjectId = 104L
                        },
                        new
                        {
                            Id = 126L,
                            Designation = "Manager ",
                            IsActive = true,
                            NoOfResources = 1,
                            ProjectId = 104L
                        });
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectJobCodes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("JobCode")
                        .HasColumnType("text");

                    b.Property<string>("JobName")
                        .HasColumnType("text");

                    b.Property<byte[]>("ModifiedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("PipelineCode")
                        .HasColumnType("text");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("text");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectJobCodes");

                    b.HasData(
                        new
                        {
                            Id = 111L,
                            CreatedBy = "System",
                            IsActive = true,
                            JobCode = "JC101",
                            JobName = "Job Name101",
                            ModifiedBy = "System",
                            PipelineCode = "PC101",
                            ProjectCode = "PC101",
                            ProjectId = 101L
                        },
                        new
                        {
                            Id = 112L,
                            CreatedBy = "System",
                            IsActive = true,
                            JobCode = "JC102",
                            JobName = "Job Name102",
                            ModifiedBy = "System",
                            PipelineCode = "PC102",
                            ProjectCode = "PC102",
                            ProjectId = 102L
                        },
                        new
                        {
                            Id = 113L,
                            CreatedBy = "System",
                            IsActive = true,
                            JobCode = "JC103",
                            JobName = "Job Name103",
                            ModifiedBy = "System",
                            PipelineCode = "PC103",
                            ProjectCode = "PC103",
                            ProjectId = 103L
                        },
                        new
                        {
                            Id = 114L,
                            CreatedBy = "System",
                            IsActive = true,
                            JobCode = "JC104",
                            JobName = "Job Name104",
                            ModifiedBy = "System",
                            PipelineCode = "PC104",
                            ProjectCode = "PC104",
                            ProjectId = 104L
                        });
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectRoles", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("ModifiedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectRoles");

                    b.HasData(
                        new
                        {
                            Id = 111L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 101L,
                            Role = "Requestor",
                            User = "abc@gmail.com",
                            UserName = "abc"
                        },
                        new
                        {
                            Id = 112L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 101L,
                            Role = "DelageteUser",
                            User = "xyz@gmail.com",
                            UserName = "xyz"
                        },
                        new
                        {
                            Id = 113L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 101L,
                            Role = "EL",
                            User = "qqq@gmail.com",
                            UserName = "qqq"
                        },
                        new
                        {
                            Id = 114L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 102L,
                            Role = "Requestor",
                            User = "abc@gmail.com",
                            UserName = "abc"
                        },
                        new
                        {
                            Id = 115L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 102L,
                            Role = "DelageteUser",
                            User = "xyz@gmail.com",
                            UserName = "xyz"
                        },
                        new
                        {
                            Id = 116L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 102L,
                            Role = "EL",
                            User = "qqq@gmail.com",
                            UserName = "qqq"
                        },
                        new
                        {
                            Id = 117L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 103L,
                            Role = "Requestor",
                            User = "abc@gmail.com",
                            UserName = "abc"
                        },
                        new
                        {
                            Id = 118L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 103L,
                            Role = "DelageteUser",
                            User = "xyz@gmail.com",
                            UserName = "xyz"
                        },
                        new
                        {
                            Id = 119L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 103L,
                            Role = "EL",
                            User = "qqq@gmail.com",
                            UserName = "qqq"
                        },
                        new
                        {
                            Id = 120L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 104L,
                            Role = "Requestor",
                            User = "abc@gmail.com",
                            UserName = "abc"
                        },
                        new
                        {
                            Id = 121L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 104L,
                            Role = "DelageteUser",
                            User = "xyz@gmail.com",
                            UserName = "xyz"
                        },
                        new
                        {
                            Id = 122L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 104L,
                            Role = "EL",
                            User = "qqq@gmail.com",
                            UserName = "qqq"
                        });
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectSkills", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("ModifiedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectSkills");

                    b.HasData(
                        new
                        {
                            Id = 111L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 101L,
                            SkillName = "Consulting"
                        },
                        new
                        {
                            Id = 112L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 101L,
                            SkillName = "Auditing"
                        },
                        new
                        {
                            Id = 113L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 101L,
                            SkillName = "Taxation"
                        },
                        new
                        {
                            Id = 114L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 102L,
                            SkillName = "Consulting"
                        },
                        new
                        {
                            Id = 115L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 102L,
                            SkillName = "Auditing"
                        },
                        new
                        {
                            Id = 116L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 102L,
                            SkillName = "Taxation"
                        },
                        new
                        {
                            Id = 117L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 103L,
                            SkillName = "Consulting"
                        },
                        new
                        {
                            Id = 118L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 103L,
                            SkillName = "Auditing"
                        },
                        new
                        {
                            Id = 119L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 103L,
                            SkillName = "Taxation"
                        },
                        new
                        {
                            Id = 120L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 104L,
                            SkillName = "Consulting"
                        },
                        new
                        {
                            Id = 121L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 104L,
                            SkillName = "Auditing"
                        },
                        new
                        {
                            Id = 122L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 104L,
                            SkillName = "Taxation"
                        });
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectDemand", b =>
                {
                    b.HasOne("RMT.Projects.Domain.Entities.Project", "Project")
                        .WithMany("ProjectDemands")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectJobCodes", b =>
                {
                    b.HasOne("RMT.Projects.Domain.Entities.Project", "Project")
                        .WithMany("ProjectJobCodes")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectRoles", b =>
                {
                    b.HasOne("RMT.Projects.Domain.Entities.Project", "Project")
                        .WithMany("ProjectRoles")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectSkills", b =>
                {
                    b.HasOne("RMT.Projects.Domain.Entities.Project", "Project")
                        .WithMany("ProjectSkills")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.Project", b =>
                {
                    b.Navigation("ProjectDemands");

                    b.Navigation("ProjectJobCodes");

                    b.Navigation("ProjectRoles");

                    b.Navigation("ProjectSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
