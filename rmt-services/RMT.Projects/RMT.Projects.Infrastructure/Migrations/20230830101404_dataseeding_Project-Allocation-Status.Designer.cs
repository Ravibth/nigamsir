// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RMT.Projects.Infrastructure.Data;

#nullable disable

namespace RMT.Projects.Infrastructure.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20230830101404_dataseeding_Project-Allocation-Status")]
    partial class dataseeding_ProjectAllocationStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RMT.Projects.Domain.Entities.MasterValue", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long?>("Id"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("RecordDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("RecordInternalName")
                        .HasColumnType("text");

                    b.Property<string>("RecordType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MasterValues");

                    b.HasData(
                        new
                        {
                            Id = 201L,
                            IsActive = true,
                            RecordDisplayName = "Rupesh Kumar",
                            RecordInternalName = "Rupesh@email.com",
                            RecordType = "Delegate"
                        },
                        new
                        {
                            Id = 202L,
                            IsActive = true,
                            RecordDisplayName = "Abhijit Singh",
                            RecordInternalName = "Abhijit@email.com",
                            RecordType = "Delegate"
                        },
                        new
                        {
                            Id = 203L,
                            IsActive = true,
                            RecordDisplayName = "Sakshi Joshi",
                            RecordInternalName = "Sakshi@email.com",
                            RecordType = "Delegate"
                        },
                        new
                        {
                            Id = 204L,
                            IsActive = true,
                            RecordDisplayName = "Consultant",
                            RecordInternalName = "Consultant",
                            RecordType = "Designation"
                        },
                        new
                        {
                            Id = 205L,
                            IsActive = true,
                            RecordDisplayName = "Sr Consultant",
                            RecordInternalName = "SrConsultant",
                            RecordType = "Designation"
                        },
                        new
                        {
                            Id = 206L,
                            IsActive = true,
                            RecordDisplayName = "Manager",
                            RecordInternalName = "Manager",
                            RecordType = "Designation"
                        },
                        new
                        {
                            Id = 207L,
                            IsActive = true,
                            RecordDisplayName = "Sakshi Joshi",
                            RecordInternalName = "Sakshi@email.com",
                            RecordType = "EngagementLeader"
                        },
                        new
                        {
                            Id = 208L,
                            IsActive = true,
                            RecordDisplayName = "Puja Sinha",
                            RecordInternalName = "Puja@email.com",
                            RecordType = "EngagementLeader"
                        },
                        new
                        {
                            Id = 209L,
                            IsActive = true,
                            RecordDisplayName = "Abhijit Singh",
                            RecordInternalName = "Abhijit@email.com",
                            RecordType = "EngagementLeader"
                        },
                        new
                        {
                            Id = 210L,
                            IsActive = true,
                            RecordDisplayName = "Expertise1",
                            RecordInternalName = "Expertise1",
                            RecordType = "Expertise"
                        },
                        new
                        {
                            Id = 211L,
                            IsActive = true,
                            RecordDisplayName = "Expertise2",
                            RecordInternalName = "Expertise2",
                            RecordType = "Expertise"
                        },
                        new
                        {
                            Id = 212L,
                            IsActive = true,
                            RecordDisplayName = "Expertise3",
                            RecordInternalName = "Expertise3",
                            RecordType = "Expertise"
                        },
                        new
                        {
                            Id = 213L,
                            IsActive = true,
                            RecordDisplayName = "Auditing",
                            RecordInternalName = "Auditing",
                            RecordType = "Skill"
                        },
                        new
                        {
                            Id = 214L,
                            IsActive = true,
                            RecordDisplayName = "Taxation",
                            RecordInternalName = "Taxation",
                            RecordType = "Skill"
                        },
                        new
                        {
                            Id = 215L,
                            IsActive = true,
                            RecordDisplayName = "Consulting",
                            RecordInternalName = "Consulting",
                            RecordType = "Skill"
                        },
                        new
                        {
                            Id = 216L,
                            IsActive = true,
                            RecordDisplayName = "SME1",
                            RecordInternalName = "SME1",
                            RecordType = "SME"
                        },
                        new
                        {
                            Id = 217L,
                            IsActive = true,
                            RecordDisplayName = "SME2",
                            RecordInternalName = "SME2",
                            RecordType = "SME"
                        });
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.Menu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("DisplayIcon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Parent")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.HasKey("Id");

                    b.ToTable("Menu");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DisplayIcon = "",
                            Parent = "#",
                            Role = "",
                            Title = "Projects",
                            Type = "TopMenu",
                            Url = "/"
                        },
                        new
                        {
                            Id = 2L,
                            DisplayIcon = "",
                            Parent = "#",
                            Role = "",
                            Title = "Employee",
                            Type = "TopMenu",
                            Url = "/"
                        },
                        new
                        {
                            Id = 3L,
                            DisplayIcon = "",
                            Parent = "#",
                            Role = "",
                            Title = "Reports",
                            Type = "TopMenu",
                            Url = "/"
                        },
                        new
                        {
                            Id = 4L,
                            DisplayIcon = "",
                            Parent = "#",
                            Role = "",
                            Title = "Manage",
                            Type = "TopMenu",
                            Url = "/"
                        },
                        new
                        {
                            Id = 5L,
                            DisplayIcon = "",
                            Parent = "#",
                            Role = "",
                            Title = "Marketplace",
                            Type = "TopMenu",
                            Url = "/"
                        },
                        new
                        {
                            Id = 6L,
                            DisplayIcon = "",
                            Parent = "#",
                            Role = "",
                            Title = "View Details",
                            Type = "ProjectContextMenu",
                            Url = "/"
                        },
                        new
                        {
                            Id = 7L,
                            DisplayIcon = "",
                            Parent = "#",
                            Role = "",
                            Title = "Create Requisition",
                            Type = "ProjectContextMenu",
                            Url = "/"
                        },
                        new
                        {
                            Id = 8L,
                            DisplayIcon = "",
                            Parent = "#",
                            Role = "",
                            Title = "Upload Requisition Excel",
                            Type = "ProjectContextMenu",
                            Url = "/"
                        },
                        new
                        {
                            Id = 9L,
                            DisplayIcon = "",
                            Parent = "#",
                            Role = "",
                            Title = "Show Calendar View",
                            Type = "EmployeeContextMenu",
                            Url = "/"
                        },
                        new
                        {
                            Id = 10L,
                            DisplayIcon = "",
                            Parent = "#",
                            Role = "",
                            Title = "Update Allocation",
                            Type = "EmployeeContextMenu",
                            Url = "/"
                        },
                        new
                        {
                            Id = 11L,
                            DisplayIcon = "",
                            Parent = "#",
                            Role = "",
                            Title = "Release Employee",
                            Type = "EmployeeContextMenu",
                            Url = "/"
                        },
                        new
                        {
                            Id = 12L,
                            DisplayIcon = "",
                            Parent = "#",
                            Role = "",
                            Title = "Move to new Job code",
                            Type = "EmployeeContextMenu",
                            Url = "/"
                        });
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.Project", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long?>("Id"));

                    b.Property<string>("BudgetStatus")
                        .HasColumnType("text");

                    b.Property<string>("ChargableType")
                        .HasColumnType("text");

                    b.Property<string>("ClientName")
                        .HasColumnType("text");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Expertise")
                        .HasColumnType("text");

                    b.Property<string>("Industry")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<bool?>("MarketClosed")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("ModifiedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("PipelineCode")
                        .HasColumnType("text");

                    b.Property<string>("PipelineName")
                        .HasColumnType("text");

                    b.Property<string>("PipelineStage")
                        .HasColumnType("text");

                    b.Property<string>("ProjectAllocationStatus")
                        .HasColumnType("text");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("text");

                    b.Property<int?>("ProjectFulFilledDemands")
                        .HasColumnType("integer");

                    b.Property<string>("ProjectName")
                        .HasColumnType("text");

                    b.Property<string>("ProjectType")
                        .HasColumnType("text");

                    b.Property<string>("RevenueUnit")
                        .HasColumnType("text");

                    b.Property<string>("Sme")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Subindustry")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 101L,
                            BudgetStatus = "In Budget",
                            ChargableType = "Chargable",
                            ClientName = "Adani Enterprises Ltd",
                            CreatedBy = "System data",
                            CreatedDate = new DateTime(2023, 9, 4, 10, 14, 4, 443, DateTimeKind.Utc).AddTicks(8574),
                            Description = "This position is responsible for sales tax setup, preparation, and management as well as preparing quarterly and annual income tax \r\nestimate payment calculations. This is the ideal role for someone who prioritizes accuracy and efficiency, has advanced Excel skills, and \r\nvalues strong internal controls.",
                            EndDate = new DateTime(2023, 9, 14, 10, 14, 4, 443, DateTimeKind.Utc).AddTicks(8548),
                            Expertise = "Audit-PIE",
                            Industry = "Auto and Auto Component",
                            IsActive = true,
                            Location = "Mumbai",
                            MarketClosed = true,
                            ModifiedBy = "System Data",
                            PipelineCode = "PC101",
                            PipelineName = "Pipeline Name 1",
                            PipelineStage = "Approved",
                            ProjectAllocationStatus = "ALLOCATION_COMPLETED",
                            ProjectCode = "PC101",
                            ProjectFulFilledDemands = 0,
                            ProjectName = "Project Name 1",
                            ProjectType = "Non-recurring",
                            RevenueUnit = "Tax Audit",
                            Sme = "Attest Service-PIE",
                            StartDate = new DateTime(2023, 9, 4, 10, 14, 4, 443, DateTimeKind.Utc).AddTicks(8541),
                            Subindustry = "Food distributors"
                        },
                        new
                        {
                            Id = 102L,
                            BudgetStatus = "In Budget",
                            ChargableType = "Chargable",
                            ClientName = "Tata consultancy services",
                            CreatedBy = "System data",
                            CreatedDate = new DateTime(2023, 9, 4, 10, 14, 4, 443, DateTimeKind.Utc).AddTicks(8584),
                            Description = "This position is responsible for sales tax setup, preparation, and management as well as preparing quarterly and annual income tax \r\nestimate payment calculations. This is the ideal role for someone who prioritizes accuracy and efficiency, has advanced Excel skills, and \r\nvalues strong internal controls.",
                            EndDate = new DateTime(2023, 9, 14, 10, 14, 4, 443, DateTimeKind.Utc).AddTicks(8579),
                            Expertise = "Audit-PC",
                            Industry = "Auto and Auto Component",
                            IsActive = true,
                            Location = "New delhi",
                            MarketClosed = true,
                            ModifiedBy = "System Data",
                            PipelineCode = "PC102",
                            PipelineName = "Pipeline Name 2",
                            PipelineStage = "Pending",
                            ProjectAllocationStatus = "ALLOCATION_COMPLETED",
                            ProjectCode = "PC102",
                            ProjectFulFilledDemands = 0,
                            ProjectName = "Project Name 2",
                            ProjectType = "Recurring",
                            RevenueUnit = "TaxAudit",
                            Sme = "Attest Services-PIE",
                            StartDate = new DateTime(2023, 9, 4, 10, 14, 4, 443, DateTimeKind.Utc).AddTicks(8578),
                            Subindustry = "Airlines and miscellaneous non-rail transportation"
                        },
                        new
                        {
                            Id = 103L,
                            BudgetStatus = "In Budget",
                            ChargableType = "NonChargable",
                            ClientName = "Philips ",
                            CreatedBy = "System data",
                            CreatedDate = new DateTime(2023, 9, 4, 10, 14, 4, 443, DateTimeKind.Utc).AddTicks(8592),
                            Description = "This position is responsible for sales tax setup, preparation, and management as well as preparing quarterly and annual income tax \r\nestimate payment calculations. This is the ideal role for someone who prioritizes accuracy and efficiency, has advanced Excel skills, and \r\nvalues strong internal controls.",
                            EndDate = new DateTime(2023, 9, 14, 10, 14, 4, 443, DateTimeKind.Utc).AddTicks(8589),
                            Expertise = "Audit-PC",
                            Industry = "CIP and Retail",
                            IsActive = true,
                            Location = "Noida",
                            MarketClosed = true,
                            ModifiedBy = "System Data",
                            PipelineCode = "PC103",
                            PipelineName = "Pipeline Name 3",
                            PipelineStage = "Approved",
                            ProjectAllocationStatus = "ALLOCATION_COMPLETED",
                            ProjectCode = "PC103",
                            ProjectFulFilledDemands = 0,
                            ProjectName = "Project Name 3",
                            ProjectType = "Recurring",
                            RevenueUnit = "Certification ",
                            Sme = "Attest Services-PIE",
                            StartDate = new DateTime(2023, 9, 4, 10, 14, 4, 443, DateTimeKind.Utc).AddTicks(8588),
                            Subindustry = "Tyres & rubber manufacturers"
                        },
                        new
                        {
                            Id = 104L,
                            BudgetStatus = "In Budget",
                            ChargableType = "NonChargable",
                            ClientName = "Adani Enterprises Ltd",
                            CreatedBy = "System data",
                            CreatedDate = new DateTime(2023, 8, 30, 10, 14, 4, 443, DateTimeKind.Utc).AddTicks(8597),
                            Description = "This position is responsible for sales tax setup, preparation, and management as well as preparing quarterly and annual income tax \r\nestimate payment calculations. This is the ideal role for someone who prioritizes accuracy and efficiency, has advanced Excel skills, and \r\nvalues strong internal controls.",
                            EndDate = new DateTime(2023, 9, 14, 10, 14, 4, 443, DateTimeKind.Utc).AddTicks(8594),
                            Expertise = "Audit-GLB",
                            Industry = "CIP and Retail",
                            IsActive = true,
                            Location = "Gurgaon",
                            MarketClosed = true,
                            ModifiedBy = "System Data",
                            PipelineCode = "PC104",
                            PipelineName = "Pipeline Name 4",
                            PipelineStage = "In Progress",
                            ProjectAllocationStatus = "ALLOCATION_COMPLETED",
                            ProjectCode = "PC104",
                            ProjectFulFilledDemands = 0,
                            ProjectName = "Project Name 4",
                            ProjectType = "Non-recurring",
                            RevenueUnit = "Loan Staffing",
                            Sme = "Attest Services-PIE",
                            StartDate = new DateTime(2023, 9, 4, 10, 14, 4, 443, DateTimeKind.Utc).AddTicks(8593),
                            Subindustry = "Tyres & rubber manufacturers"
                        });
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectDemand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("ModifiedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<int>("NoOfResources")
                        .HasColumnType("integer");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectDemands");

                    b.HasData(
                        new
                        {
                            Id = 111L,
                            Designation = "Consultant",
                            IsActive = true,
                            NoOfResources = 2,
                            ProjectId = 101L
                        },
                        new
                        {
                            Id = 112L,
                            Designation = "Sr Consultant",
                            IsActive = true,
                            NoOfResources = 3,
                            ProjectId = 101L
                        },
                        new
                        {
                            Id = 113L,
                            Designation = "Project Consultant",
                            IsActive = true,
                            NoOfResources = 1,
                            ProjectId = 101L
                        },
                        new
                        {
                            Id = 114L,
                            Designation = "Manager ",
                            IsActive = true,
                            NoOfResources = 1,
                            ProjectId = 101L
                        },
                        new
                        {
                            Id = 115L,
                            Designation = "Consultant",
                            IsActive = true,
                            NoOfResources = 2,
                            ProjectId = 102L
                        },
                        new
                        {
                            Id = 116L,
                            Designation = "Sr Consultant",
                            IsActive = true,
                            NoOfResources = 3,
                            ProjectId = 102L
                        },
                        new
                        {
                            Id = 117L,
                            Designation = "Project Consultant",
                            IsActive = true,
                            NoOfResources = 1,
                            ProjectId = 102L
                        },
                        new
                        {
                            Id = 118L,
                            Designation = "Manager ",
                            IsActive = true,
                            NoOfResources = 1,
                            ProjectId = 102L
                        },
                        new
                        {
                            Id = 119L,
                            Designation = "Consultant",
                            IsActive = true,
                            NoOfResources = 2,
                            ProjectId = 103L
                        },
                        new
                        {
                            Id = 120L,
                            Designation = "Sr Consultant",
                            IsActive = true,
                            NoOfResources = 3,
                            ProjectId = 103L
                        },
                        new
                        {
                            Id = 121L,
                            Designation = "Project Consultant",
                            IsActive = true,
                            NoOfResources = 1,
                            ProjectId = 103L
                        },
                        new
                        {
                            Id = 122L,
                            Designation = "Manager ",
                            IsActive = true,
                            NoOfResources = 1,
                            ProjectId = 103L
                        },
                        new
                        {
                            Id = 123L,
                            Designation = "Consultant",
                            IsActive = true,
                            NoOfResources = 2,
                            ProjectId = 104L
                        },
                        new
                        {
                            Id = 124L,
                            Designation = "Sr Consultant",
                            IsActive = true,
                            NoOfResources = 3,
                            ProjectId = 104L
                        },
                        new
                        {
                            Id = 125L,
                            Designation = "Project Consultant",
                            IsActive = true,
                            NoOfResources = 1,
                            ProjectId = 104L
                        },
                        new
                        {
                            Id = 126L,
                            Designation = "Manager ",
                            IsActive = true,
                            NoOfResources = 1,
                            ProjectId = 104L
                        });
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectJobCodes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("JobCode")
                        .HasColumnType("text");

                    b.Property<string>("JobName")
                        .HasColumnType("text");

                    b.Property<byte[]>("ModifiedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("PipelineCode")
                        .HasColumnType("text");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("text");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectJobCodes");

                    b.HasData(
                        new
                        {
                            Id = 111L,
                            CreatedBy = "System",
                            IsActive = true,
                            JobCode = "JC101",
                            JobName = "Job Name101",
                            ModifiedBy = "System",
                            PipelineCode = "PC101",
                            ProjectCode = "PC101",
                            ProjectId = 101L
                        },
                        new
                        {
                            Id = 112L,
                            CreatedBy = "System",
                            IsActive = true,
                            JobCode = "JC102",
                            JobName = "Job Name102",
                            ModifiedBy = "System",
                            PipelineCode = "PC102",
                            ProjectCode = "PC102",
                            ProjectId = 102L
                        },
                        new
                        {
                            Id = 113L,
                            CreatedBy = "System",
                            IsActive = true,
                            JobCode = "JC103",
                            JobName = "Job Name103",
                            ModifiedBy = "System",
                            PipelineCode = "PC103",
                            ProjectCode = "PC103",
                            ProjectId = 103L
                        },
                        new
                        {
                            Id = 114L,
                            CreatedBy = "System",
                            IsActive = true,
                            JobCode = "JC104",
                            JobName = "Job Name104",
                            ModifiedBy = "System",
                            PipelineCode = "PC104",
                            ProjectCode = "PC104",
                            ProjectId = 104L
                        });
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectRoles", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("ModifiedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectRoles");

                    b.HasData(
                        new
                        {
                            Id = 111L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 101L,
                            Role = "Requestor",
                            User = "pravinsharma@gmail.com",
                            UserName = "Pravin Sharma"
                        },
                        new
                        {
                            Id = 112L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 101L,
                            Role = "DelageteUser",
                            User = "rupeshgandhi@gmail.com",
                            UserName = "Rupesh Gandhi"
                        },
                        new
                        {
                            Id = 113L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 101L,
                            Role = "EngagementLeader",
                            User = "sakshijoshi@gmail.com",
                            UserName = "Sakshi Joshi"
                        },
                        new
                        {
                            Id = 114L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 102L,
                            Role = "Requestor",
                            User = "gayatri@gmail.com",
                            UserName = "Gayatri Sharma"
                        },
                        new
                        {
                            Id = 115L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 102L,
                            Role = "DelageteUser",
                            User = "ajit@gmail.com",
                            UserName = "Ajit Sinha"
                        },
                        new
                        {
                            Id = 116L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 102L,
                            Role = "EngagementLeader",
                            User = "abhijit@gmail.com",
                            UserName = "Abhijit Singh"
                        },
                        new
                        {
                            Id = 117L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 103L,
                            Role = "Requestor",
                            User = "pravin@gmail.com",
                            UserName = "Pravin Singh"
                        },
                        new
                        {
                            Id = 118L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 103L,
                            Role = "DelageteUser",
                            User = "sakshi@gmail.com",
                            UserName = "Sakshi Sharma"
                        },
                        new
                        {
                            Id = 119L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 103L,
                            Role = "EngagementLeader",
                            User = "rupesh@gmail.com",
                            UserName = "Rupesh Kumar"
                        },
                        new
                        {
                            Id = 120L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 104L,
                            Role = "Requestor",
                            User = "ritika@gmail.com",
                            UserName = "Ritika Garg"
                        },
                        new
                        {
                            Id = 121L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 104L,
                            Role = "DelageteUser",
                            User = "ayushi@gmail.com",
                            UserName = "Ayushi Singh"
                        },
                        new
                        {
                            Id = 122L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 104L,
                            Role = "EngagementLeader",
                            User = "puja@gmail.com",
                            UserName = "Puja Sinha"
                        });
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectSkills", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("ModifiedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectSkills");

                    b.HasData(
                        new
                        {
                            Id = 111L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 101L,
                            SkillName = "Consulting"
                        },
                        new
                        {
                            Id = 112L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 101L,
                            SkillName = "Auditing"
                        },
                        new
                        {
                            Id = 113L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 101L,
                            SkillName = "Taxation"
                        },
                        new
                        {
                            Id = 114L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 102L,
                            SkillName = "Consulting"
                        },
                        new
                        {
                            Id = 115L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 102L,
                            SkillName = "Auditing"
                        },
                        new
                        {
                            Id = 116L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 102L,
                            SkillName = "Taxation"
                        },
                        new
                        {
                            Id = 117L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 103L,
                            SkillName = "Consulting"
                        },
                        new
                        {
                            Id = 118L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 103L,
                            SkillName = "Auditing"
                        },
                        new
                        {
                            Id = 119L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 103L,
                            SkillName = "Taxation"
                        },
                        new
                        {
                            Id = 120L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 104L,
                            SkillName = "Consulting"
                        },
                        new
                        {
                            Id = 121L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 104L,
                            SkillName = "Auditing"
                        },
                        new
                        {
                            Id = 122L,
                            CreatedBy = "System",
                            IsActive = true,
                            ModifiedBy = "System",
                            ProjectId = 104L,
                            SkillName = "Taxation"
                        });
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectDemand", b =>
                {
                    b.HasOne("RMT.Projects.Domain.Entities.Project", "Project")
                        .WithMany("ProjectDemands")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectJobCodes", b =>
                {
                    b.HasOne("RMT.Projects.Domain.Entities.Project", "Project")
                        .WithMany("ProjectJobCodes")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectRoles", b =>
                {
                    b.HasOne("RMT.Projects.Domain.Entities.Project", "Project")
                        .WithMany("ProjectRoles")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectSkills", b =>
                {
                    b.HasOne("RMT.Projects.Domain.Entities.Project", "Project")
                        .WithMany("ProjectSkills")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.Project", b =>
                {
                    b.Navigation("ProjectDemands");

                    b.Navigation("ProjectJobCodes");

                    b.Navigation("ProjectRoles");

                    b.Navigation("ProjectSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
