// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RMT.Projects.Infrastructure.Data;

#nullable disable

namespace RMT.Projects.Infrastructure.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20240105171243_Justification-Allocation")]
    partial class JustificationAllocation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RMT.Projects.Domain.Entities.FieldForMarketPlace", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InternalName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FieldForMarketPlaces");

                    b.HasData(
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            DisplayName = "string1",
                            InternalName = "string1",
                            IsActive = false,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            DisplayName = "Client Group",
                            InternalName = "clientGroup",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            DisplayName = "Client Name",
                            InternalName = "clientName",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System"
                        },
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            DisplayName = "Project Name",
                            InternalName = "projectName",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            DisplayName = "Project ID",
                            InternalName = "projectID",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System"
                        });
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.MasterValue", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long?>("Id"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("RecordDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("RecordInternalName")
                        .HasColumnType("text");

                    b.Property<string>("RecordType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MasterValues");

                    b.HasData(
                        new
                        {
                            Id = 301L,
                            IsActive = true,
                            RecordDisplayName = "Rupesh Kumar",
                            RecordInternalName = "Rupesh@email.com",
                            RecordType = "Delegate"
                        },
                        new
                        {
                            Id = 302L,
                            IsActive = true,
                            RecordDisplayName = "Abhijit Singh",
                            RecordInternalName = "Abhijit@email.com",
                            RecordType = "Delegate"
                        },
                        new
                        {
                            Id = 303L,
                            IsActive = true,
                            RecordDisplayName = "Sakshi Joshi",
                            RecordInternalName = "Sakshi@email.com",
                            RecordType = "Delegate"
                        },
                        new
                        {
                            Id = 304L,
                            IsActive = true,
                            RecordDisplayName = "Consultant",
                            RecordInternalName = "Consultant",
                            RecordType = "Designation"
                        },
                        new
                        {
                            Id = 305L,
                            IsActive = true,
                            RecordDisplayName = "Sr Consultant",
                            RecordInternalName = "SrConsultant",
                            RecordType = "Designation"
                        },
                        new
                        {
                            Id = 306L,
                            IsActive = true,
                            RecordDisplayName = "Manager",
                            RecordInternalName = "Manager",
                            RecordType = "Designation"
                        },
                        new
                        {
                            Id = 307L,
                            IsActive = true,
                            RecordDisplayName = "Sakshi Joshi",
                            RecordInternalName = "Sakshi@email.com",
                            RecordType = "EngagementLeader"
                        },
                        new
                        {
                            Id = 308L,
                            IsActive = true,
                            RecordDisplayName = "Puja Sinha",
                            RecordInternalName = "Puja@email.com",
                            RecordType = "EngagementLeader"
                        },
                        new
                        {
                            Id = 309L,
                            IsActive = true,
                            RecordDisplayName = "Abhijit Singh",
                            RecordInternalName = "Abhijit@email.com",
                            RecordType = "EngagementLeader"
                        },
                        new
                        {
                            Id = 310L,
                            IsActive = true,
                            RecordDisplayName = "Expertise1",
                            RecordInternalName = "Expertise1",
                            RecordType = "Expertise"
                        },
                        new
                        {
                            Id = 311L,
                            IsActive = true,
                            RecordDisplayName = "Expertise2",
                            RecordInternalName = "Expertise2",
                            RecordType = "Expertise"
                        },
                        new
                        {
                            Id = 312L,
                            IsActive = true,
                            RecordDisplayName = "Expertise3",
                            RecordInternalName = "Expertise3",
                            RecordType = "Expertise"
                        },
                        new
                        {
                            Id = 313L,
                            IsActive = true,
                            RecordDisplayName = "Auditing",
                            RecordInternalName = "Auditing",
                            RecordType = "Skill"
                        },
                        new
                        {
                            Id = 314L,
                            IsActive = true,
                            RecordDisplayName = "Taxation",
                            RecordInternalName = "Taxation",
                            RecordType = "Skill"
                        },
                        new
                        {
                            Id = 315L,
                            IsActive = true,
                            RecordDisplayName = "Consulting",
                            RecordInternalName = "Consulting",
                            RecordType = "Skill"
                        },
                        new
                        {
                            Id = 316L,
                            IsActive = true,
                            RecordDisplayName = "SME1",
                            RecordInternalName = "SME1",
                            RecordType = "SME"
                        },
                        new
                        {
                            Id = 317L,
                            IsActive = true,
                            RecordDisplayName = "SME2",
                            RecordInternalName = "SME2",
                            RecordType = "SME"
                        });
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.Menu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("DisplayIcon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Parent")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.HasKey("Id");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.Project", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long?>("Id"));

                    b.Property<string>("BudgetStatus")
                        .HasColumnType("text");

                    b.Property<string>("ChargableType")
                        .HasColumnType("text");

                    b.Property<string>("ClientGroup")
                        .HasColumnType("text");

                    b.Property<string>("ClientName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Expertise")
                        .HasColumnType("text");

                    b.Property<string>("Industry")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsPublishedToMarketPlace")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsRequisitionCreationallowed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRollover")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsSuspended")
                        .HasColumnType("boolean");

                    b.Property<string>("JustificationToAllocate")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("PipelineCode")
                        .HasColumnType("text");

                    b.Property<string>("PipelineName")
                        .HasColumnType("text");

                    b.Property<string>("PipelineStage")
                        .HasColumnType("text");

                    b.Property<string>("PipelineStatus")
                        .HasColumnType("text");

                    b.Property<string>("ProjectAllocationStatus")
                        .HasColumnType("text");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("text");

                    b.Property<int?>("ProjectFulFilledDemands")
                        .HasColumnType("integer");

                    b.Property<string>("ProjectName")
                        .HasColumnType("text");

                    b.Property<string>("ProjectType")
                        .HasColumnType("text");

                    b.Property<DateTime?>("PublishedToMarketPlaceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RevenueUnit")
                        .HasColumnType("text");

                    b.Property<int>("RolloverDays")
                        .HasColumnType("integer");

                    b.Property<string>("Sme")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Subindustry")
                        .HasColumnType("text");

                    b.Property<DateTime?>("SuspendedModifyAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("bu")
                        .HasColumnType("text");

                    b.Property<string>("sector")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 203L,
                            BudgetStatus = "In Budget",
                            ChargableType = "NonChargable",
                            ClientGroup = "ClientGrpName1",
                            ClientName = "Philips ",
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "Job Description: This project is for  Global Audit delivery of NC Direct Tax Analysis. This position is responsible for sales tax setup, preparation, and management as well as preparing quarterly and annual income tax estimate payment calculations. This is the ideal role for someone who prioritizes accuracy and efficiency, has advanced Excel skills, and values strong internal controls.",
                            EndDate = new DateTime(2023, 12, 15, 11, 44, 42, 586, DateTimeKind.Local).AddTicks(6340),
                            Expertise = "Audit-PC",
                            Industry = "CIP and Retail",
                            IsActive = true,
                            IsPublishedToMarketPlace = false,
                            IsRequisitionCreationallowed = true,
                            IsRollover = false,
                            Location = "Noida",
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            PipelineCode = "PC103",
                            PipelineName = "NC Direct Tax Analysis",
                            PipelineStage = "Pending",
                            PipelineStatus = "WON",
                            ProjectAllocationStatus = "Pending",
                            ProjectCode = "PC103",
                            ProjectFulFilledDemands = 0,
                            ProjectName = "NC Direct Tax Analysis",
                            ProjectType = "Recurring",
                            RevenueUnit = "Certification ",
                            RolloverDays = 0,
                            Sme = "Attest Services-PIE",
                            StartDate = new DateTime(2023, 10, 5, 11, 44, 42, 586, DateTimeKind.Local).AddTicks(6340),
                            Subindustry = "Tyres & rubber manufacturers",
                            bu = "",
                            sector = ""
                        },
                        new
                        {
                            Id = 201L,
                            BudgetStatus = "In Budget",
                            ChargableType = "Chargable",
                            ClientGroup = "ClientGrpName1",
                            ClientName = "Adani Enterprises Ltd",
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "Job Description: This project is for Global Audit delivery of GOA CRM Testing Client. This position is responsible for sales tax setup, preparation, and management as well as preparing quarterly and annual income tax estimate payment calculations. This is the ideal role for someone who prioritizes accuracy and efficiency, has advanced Excel skills, and values strong internal controls-updated, update by testing",
                            EndDate = new DateTime(2023, 12, 30, 11, 44, 42, 586, DateTimeKind.Local).AddTicks(6280),
                            Expertise = "Audit-PIE",
                            Industry = "Auto and Auto Component",
                            IsActive = true,
                            IsPublishedToMarketPlace = false,
                            IsRequisitionCreationallowed = true,
                            IsRollover = false,
                            Location = "Mumbai",
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            PipelineCode = "PC101",
                            PipelineName = "ABS Inc US GAAP Audit",
                            PipelineStage = "Approved",
                            ProjectAllocationStatus = "ALLOCATION_COMPLETED",
                            ProjectCode = "PC101",
                            ProjectFulFilledDemands = 0,
                            ProjectName = "ABS Inc US GAAP Audit",
                            ProjectType = "Non-recurring",
                            RevenueUnit = "Tax Audit",
                            RolloverDays = 0,
                            Sme = "Attest Service-PIE",
                            StartDate = new DateTime(2023, 10, 3, 11, 44, 42, 586, DateTimeKind.Local).AddTicks(6260),
                            Subindustry = "Food distributorsWON",
                            bu = ",sector= "
                        },
                        new
                        {
                            Id = 204L,
                            BudgetStatus = "In Budget",
                            ChargableType = "NonChargable",
                            ClientGroup = "ClientGrpName1",
                            ClientName = "Adani Enterprises Ltd",
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "Job Description: This project is for  Global Audit delivery of Global Audit - Adani. This position is responsible for sales tax setup, preparation, and management as well as preparing quarterly and annual income tax estimate payment calculations. This is the ideal role for someone who prioritizes accuracy and efficiency, has advanced Excel skills, and values strong internal controls.",
                            EndDate = new DateTime(2023, 12, 15, 11, 44, 42, 586, DateTimeKind.Local).AddTicks(6440),
                            Expertise = "Audit-GLB",
                            Industry = "CIP and Retail",
                            IsActive = true,
                            IsPublishedToMarketPlace = false,
                            IsRequisitionCreationallowed = true,
                            IsRollover = false,
                            IsSuspended = true,
                            Location = "Gurgaon",
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            PipelineCode = "PC104",
                            PipelineName = "Global Audit - Adani",
                            PipelineStage = "In Progress",
                            ProjectAllocationStatus = "ALLOCATION_COMPLETED",
                            ProjectCode = "PC104",
                            ProjectFulFilledDemands = 0,
                            ProjectName = "Global Audit - Adani",
                            ProjectType = "Non-recurring",
                            RevenueUnit = "Loan Staffing",
                            RolloverDays = 0,
                            Sme = "Attest Services-PIE",
                            StartDate = new DateTime(2023, 10, 5, 11, 44, 42, 586, DateTimeKind.Local).AddTicks(6430),
                            Subindustry = "Tyres & rubber manufacturersSuspended",
                            SuspendedModifyAt = new DateTime(2023, 11, 30, 18, 7, 0, 340, DateTimeKind.Local).AddTicks(1370),
                            bu = "",
                            sector = ""
                        },
                        new
                        {
                            Id = 202L,
                            BudgetStatus = "In Budget",
                            ChargableType = "Chargable",
                            ClientGroup = "ClientGrpName1",
                            ClientName = "Tata consultancy services",
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "Job Description: This project is for  Global Audit delivery of GOA CRM Testing Client. This position is responsible for sales tax setup, preparation, and management as well as preparing quarterly and annual income tax estimate payment calculations. This is the ideal role for someone who prioritizes accuracy and efficiency, has advanced Excel skills, and values strong internal controls.",
                            EndDate = new DateTime(2023, 10, 29, 11, 44, 42, 586, DateTimeKind.Local).AddTicks(6280),
                            Expertise = "Audit-PC",
                            Industry = "Auto and Auto Component",
                            IsActive = true,
                            IsPublishedToMarketPlace = false,
                            IsRequisitionCreationallowed = true,
                            IsRollover = false,
                            IsSuspended = false,
                            Location = "New delhi",
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            PipelineCode = "PC102",
                            PipelineName = "GOA CRM Testing Client",
                            PipelineStage = "Pending",
                            ProjectAllocationStatus = "ALLOCATION_COMPLETED",
                            ProjectCode = "PC102",
                            ProjectFulFilledDemands = 0,
                            ProjectName = "GOA CRM Testing Client",
                            ProjectType = "Recurring",
                            RevenueUnit = "TaxAudit",
                            RolloverDays = 0,
                            Sme = "Attest Services-PIE",
                            StartDate = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Subindustry = "Airlines and miscellaneous non-rail transportationWON",
                            SuspendedModifyAt = new DateTime(2023, 11, 30, 0, 44, 0, 278, DateTimeKind.Local).AddTicks(4850),
                            bu = "Bu1",
                            sector = "Sector1"
                        },
                        new
                        {
                            Id = 205L,
                            BudgetStatus = "In Budget",
                            ChargableType = "Chargable",
                            ClientGroup = "ClientGrpName1",
                            ClientName = "Adani Enterprises Ltd",
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "Job Description: This project is for Global Audit delivery of GOA CRM Testing Client. This position is responsible for sales tax setup, preparation, and management as well as preparing quarterly and annual income tax estimate payment calculations. This is the ideal role for someone who prioritizes accuracy and efficiency, has advanced Excel skills, and values strong internal controls-updated, update by testing",
                            EndDate = new DateTime(2023, 12, 30, 11, 44, 42, 586, DateTimeKind.Local).AddTicks(6280),
                            Expertise = "Audit-PIE",
                            Industry = "Auto and Auto Component",
                            IsActive = true,
                            IsPublishedToMarketPlace = false,
                            IsRequisitionCreationallowed = true,
                            IsRollover = true,
                            IsSuspended = false,
                            Location = "Mumbai",
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            PipelineCode = "PC106",
                            PipelineName = "GT Audit",
                            PipelineStage = "Pending",
                            ProjectAllocationStatus = "ALLOCATION_COMPLETED",
                            ProjectCode = "PC106",
                            ProjectFulFilledDemands = 0,
                            ProjectName = "GT Audit",
                            ProjectType = "Non-recurring",
                            RevenueUnit = "Tax Audit",
                            RolloverDays = 30,
                            Sme = "Attest Service-PIE",
                            StartDate = new DateTime(2023, 10, 5, 11, 44, 42, 586, DateTimeKind.Local).AddTicks(6260),
                            Subindustry = "Food distributorsWON",
                            bu = ",sector= "
                        });
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectBudget", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<double>("BudgetedHour")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("JobCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<double>("RatePerHour")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectBudget");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectDemand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<int>("NoOfResources")
                        .HasColumnType("integer");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectDemands");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectDemandSkills", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<long>("ProjectDemandId")
                        .HasColumnType("bigint");

                    b.Property<string>("SkillName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectDemandId");

                    b.ToTable("ProjectDemandSkills");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectJobCodes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("JobCode")
                        .HasColumnType("text");

                    b.Property<string>("JobName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("PipelineCode")
                        .HasColumnType("text");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("text");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectJobCodes");

                    b.HasData(
                        new
                        {
                            Id = 211L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            IsActive = true,
                            JobCode = "JC101",
                            JobName = "Job Name101",
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            PipelineCode = "PC101",
                            ProjectCode = "PC101",
                            ProjectId = 201L
                        },
                        new
                        {
                            Id = 212L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            IsActive = true,
                            JobCode = "JC102",
                            JobName = "Job Name102",
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            PipelineCode = "PC102",
                            ProjectCode = "PC102",
                            ProjectId = 202L
                        },
                        new
                        {
                            Id = 214L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            IsActive = true,
                            JobCode = "JC104",
                            JobName = "Job Name104",
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            PipelineCode = "PC104",
                            ProjectCode = "PC104",
                            ProjectId = 204L
                        },
                        new
                        {
                            Id = 215L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            IsActive = true,
                            JobCode = "JC104",
                            JobName = "Job Name 104",
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            PipelineCode = "PC104",
                            ProjectCode = "PC104",
                            ProjectId = 204L
                        },
                        new
                        {
                            Id = 213L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            IsActive = true,
                            JobCode = "JC103",
                            JobName = "Job Name103",
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            PipelineCode = "PC102",
                            ProjectCode = "PC102",
                            ProjectId = 202L
                        },
                        new
                        {
                            Id = 216L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            IsActive = true,
                            JobCode = "JC106",
                            JobName = "Job Name106",
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            PipelineCode = "PC106",
                            ProjectCode = "PC106",
                            ProjectId = 205L
                        });
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectRoles", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectRoles");

                    b.HasData(
                        new
                        {
                            Id = 211L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 201L,
                            Role = "engagementleader",
                            User = "Aayush.Garg@expdiginetdev.onmicrosoft.com",
                            UserName = "Ayush Garg"
                        },
                        new
                        {
                            Id = 223L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 203L,
                            Role = "EngagementLeader",
                            User = "Sakshi@email.com",
                            UserName = "Sakshi Joshi"
                        },
                        new
                        {
                            Id = 224L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 203L,
                            Role = "EngagementLeader",
                            User = "Puja@email.com",
                            UserName = "Puja Sinha"
                        },
                        new
                        {
                            Id = 225L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 201L,
                            Role = "EngagementLeader",
                            User = "Sakshi@email.com",
                            UserName = "Sakshi Joshi"
                        },
                        new
                        {
                            Id = 226L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 201L,
                            Role = "Delegate",
                            User = "Rupesh@email.com",
                            UserName = "Rupesh Kumar"
                        },
                        new
                        {
                            Id = 219L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 203L,
                            Role = "EO",
                            User = "rupesh@gmail.com",
                            UserName = "Rupesh Kumar"
                        },
                        new
                        {
                            Id = 222L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 204L,
                            Role = "EO",
                            User = "rupesh@gmail.com",
                            UserName = "Rupesh Kumar"
                        },
                        new
                        {
                            Id = 212L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 201L,
                            Role = "Delegate",
                            User = "puja@gmail.com",
                            UserName = "Puja Sinha"
                        },
                        new
                        {
                            Id = 215L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 202L,
                            Role = "Delegate",
                            User = "puja@gmail.com",
                            UserName = "Puja Sinha"
                        },
                        new
                        {
                            Id = 218L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 203L,
                            Role = "Delegate",
                            User = "puja@gmail.com",
                            UserName = "Puja Sinha"
                        },
                        new
                        {
                            Id = 221L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 204L,
                            Role = "Delegate",
                            User = "puja@gmail.com",
                            UserName = "Puja Sinha"
                        },
                        new
                        {
                            Id = 213L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 201L,
                            Role = "EngagementLeader",
                            User = "rupesh@gmail.com",
                            UserName = "Rupesh Kumar"
                        },
                        new
                        {
                            Id = 216L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 202L,
                            Role = "EngagementLeader",
                            User = "rupesh@gmail.com",
                            UserName = "Rupesh Kumar"
                        },
                        new
                        {
                            Id = 227L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 205L,
                            Role = "Requestor",
                            User = "Aayush.Garg@expdiginetdev.onmicrosoft.com",
                            UserName = "Ayush Garg"
                        },
                        new
                        {
                            Id = 229L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 205L,
                            Role = "delegateuser",
                            User = "Aayush.Garg@expdiginetdev.onmicrosoft.com",
                            UserName = "Ayush Garg"
                        },
                        new
                        {
                            Id = 230L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 205L,
                            Role = "engagementleader",
                            User = "Aayush.Garg@expdiginetdev.onmicrosoft.com",
                            UserName = "Ayush Garg"
                        },
                        new
                        {
                            Id = 214L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 202L,
                            Role = "engagementleader",
                            User = "Aayush.Garg@expdiginetdev.onmicrosoft.com",
                            UserName = "Ayush Garg"
                        },
                        new
                        {
                            Id = 217L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 203L,
                            Role = "engagementleader",
                            User = "Aayush.Garg@expdiginetdev.onmicrosoft.com",
                            UserName = "Ayush Garg"
                        },
                        new
                        {
                            Id = 220L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 204L,
                            Role = "engagementleader",
                            User = "Aayush.Garg@expdiginetdev.onmicrosoft.com",
                            UserName = "Ayush Garg"
                        },
                        new
                        {
                            Id = 228L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 205L,
                            Role = "Delegate",
                            User = "Aayush.Garg@expdiginetdev.onmicrosoft.com",
                            UserName = "Ayush Garg"
                        },
                        new
                        {
                            Id = 231L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 201L,
                            Role = "Delegate",
                            User = "Aayush.Garg@expdiginetdev.onmicrosoft.com",
                            UserName = "Ayush Garg"
                        },
                        new
                        {
                            Id = 232L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 203L,
                            Role = "Delegate",
                            User = "Aayush.Garg@expdiginetdev.onmicrosoft.com",
                            UserName = "Ayush Garg"
                        },
                        new
                        {
                            Id = 233L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 204L,
                            Role = "Delegate",
                            User = "Aayush.Garg@expdiginetdev.onmicrosoft.com",
                            UserName = "Ayush Garg"
                        },
                        new
                        {
                            Id = 234L,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "",
                            IsActive = true,
                            ModifiedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = "System",
                            ProjectId = 202L,
                            Role = "Delegate",
                            User = "Aayush.Garg@expdiginetdev.onmicrosoft.com",
                            UserName = "Ayush Garg"
                        });
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectSkills", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectSkills");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.PublishedFieldForMarketPlace", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PublishedFieldForMarketPlaces");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectBudget", b =>
                {
                    b.HasOne("RMT.Projects.Domain.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectDemand", b =>
                {
                    b.HasOne("RMT.Projects.Domain.Entities.Project", "Project")
                        .WithMany("ProjectDemands")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectDemandSkills", b =>
                {
                    b.HasOne("RMT.Projects.Domain.Entities.ProjectDemand", "ProjectDemand")
                        .WithMany("ProjectDemandSkills")
                        .HasForeignKey("ProjectDemandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectDemand");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectJobCodes", b =>
                {
                    b.HasOne("RMT.Projects.Domain.Entities.Project", "Project")
                        .WithMany("ProjectJobCodes")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectRoles", b =>
                {
                    b.HasOne("RMT.Projects.Domain.Entities.Project", "Project")
                        .WithMany("ProjectRoles")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectSkills", b =>
                {
                    b.HasOne("RMT.Projects.Domain.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.Project", b =>
                {
                    b.Navigation("ProjectDemands");

                    b.Navigation("ProjectJobCodes");

                    b.Navigation("ProjectRoles");
                });

            modelBuilder.Entity("RMT.Projects.Domain.Entities.ProjectDemand", b =>
                {
                    b.Navigation("ProjectDemandSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
