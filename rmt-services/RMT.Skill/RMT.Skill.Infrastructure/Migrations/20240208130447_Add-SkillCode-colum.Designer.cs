// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RMT.Skill.Infrastructure.Data;

#nullable disable

namespace RMT.Skill.Infrastructure.Migrations
{
    [DbContext(typeof(SkillDbContext))]
    [Migration("20240208130447_Add-SkillCode-colum")]
    partial class AddSkillCodecolum
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RMT.Skill.Domain.Entities.SkillCategoryMaster", b =>
                {
                    b.Property<long?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long?>("id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("SkillCategoryMaster");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            CategoryName = "Technical",
                            CreateDate = new DateTime(2024, 2, 8, 13, 4, 47, 688, DateTimeKind.Utc).AddTicks(1226),
                            CreatedBy = "System",
                            IsActive = true
                        },
                        new
                        {
                            id = 2L,
                            CategoryName = "Soft",
                            CreateDate = new DateTime(2024, 2, 8, 13, 4, 47, 688, DateTimeKind.Utc).AddTicks(1232),
                            CreatedBy = "System",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("RMT.Skill.Domain.Entities.SkillMapping", b =>
                {
                    b.Property<long?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long?>("id"));

                    b.Property<string>("BusinessUnit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<List<string>>("Designation")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Experties")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<long?>("Skill_Id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("Skill_Id");

                    b.ToTable("SkillMapping");
                });

            modelBuilder.Entity("RMT.Skill.Domain.Entities.Skills", b =>
                {
                    b.Property<long?>("Skill_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long?>("Skill_Id"));

                    b.Property<string>("Advanced")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Basic")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Expert")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Intermediate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsEnable")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("SkillCategory")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SkillCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Skill_Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("RMT.Skill.Domain.Entities.SkillMapping", b =>
                {
                    b.HasOne("RMT.Skill.Domain.Entities.Skills", "Skill")
                        .WithMany("Skill_Mapping")
                        .HasForeignKey("Skill_Id");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("RMT.Skill.Domain.Entities.Skills", b =>
                {
                    b.Navigation("Skill_Mapping");
                });
#pragma warning restore 612, 618
        }
    }
}
